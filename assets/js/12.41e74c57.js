(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{410:function(t,a,s){"use strict";s.r(a);var _=s(2),r=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"花3分钟写的简易ioc-放在golang的项目中太好用了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#花3分钟写的简易ioc-放在golang的项目中太好用了"}},[t._v("#")]),t._v(" 花3分钟写的简易IoC，放在Golang的项目中太好用了~")]),t._v(" "),a("h2",{attrs:{id:"一、什么是ioc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是ioc"}},[t._v("#")]),t._v(" 一、什么是IOC")]),t._v(" "),a("p",[t._v("注："),a("strong",[t._v("本文是利用了Ioc的一些思想，实现了简易版的IoC容器")]),t._v("，和IoC的原思想有些不一致。可以小马过河，因人而异~")]),t._v(" "),a("p",[t._v("一句话解释：将对象利用控制反转的方式，在容器中创建出Bean，并且可以自动注入Bean所需的依赖。")]),t._v(" "),a("p",[t._v("简易版IoC：将依赖注入容器中后，用控制反转的方式，从IoC容器中获取所需要的依赖。")]),t._v(" "),a("p",[t._v("应该很懵吧：什么是控制反转？什么又是依赖？注入之后怎么取出来勒？")]),t._v(" "),a("p",[t._v("如果这几个概念你很清楚，那咱不浪费大哥们的时间，直接跳第二节去~\n但是为了照顾像我一样cer头cer脑的小朋友，咱们来看看这几个问题~~~")]),t._v(" "),a("h3",{attrs:{id:"_1-什么是依赖注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是依赖注入"}},[t._v("#")]),t._v(" （1）什么是依赖注入？")]),t._v(" "),a("h4",{attrs:{id:"_1、原本的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、原本的"}},[t._v("#")]),t._v(" 1、原本的")]),t._v(" "),a("p",[a("code",[t._v("DI（Dependence Inject）")]),t._v("称为依赖注入，原本的思想是。如果A实例依赖B实例")]),t._v(" "),a("p",[t._v("如下代码所示：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" A "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A对象依赖对象 B")]),t._v("\n    b B\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" B "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在程序启动时，初始化IoC容器的时候，会通过一定的手段（如：通过注解、通过配置文件），\n自动扫描到在创建实例化A时，需要依赖对象B。这时候会直接从IoC中取出对象B，注入给A对象。")]),t._v(" "),a("h4",{attrs:{id:"_2、简易版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、简易版"}},[t._v("#")]),t._v(" 2、简易版")]),t._v(" "),a("p",[t._v("简单说明了上面的那种解释，不理解没关系，因为我们要实现的简易版，\n我们的依赖注入指的是：程序启动时，如何将IoC容器所依赖的对象，注入其中。")]),t._v(" "),a("p",[t._v("就好比，你去找医生看病。你的身体是容器，它病了，需要依赖药品。医生该如何将药注入你的身体，或者你选择什么样的注入方式：")]),t._v(" "),a("ol",[a("li",[t._v("口服")]),t._v(" "),a("li",[t._v("用针管注入")]),t._v(" "),a("li",[t._v("输液")])]),t._v(" "),a("p",[t._v("然后注入容器之后，然后之后你的免疫系统需要依赖他们来杀死病毒。只需要从你的身体中取出抗体即可。")]),t._v(" "),a("h3",{attrs:{id:"_2-怎么注入容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-怎么注入容器"}},[t._v("#")]),t._v(" （2）怎么注入容器？")]),t._v(" "),a("h3",{attrs:{id:"_2-控制怎么就反转了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-控制怎么就反转了"}},[t._v("#")]),t._v(" （2）控制怎么就反转了？")]),t._v(" "),a("h2",{attrs:{id:"二、为什么会有ioc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、为什么会有ioc"}},[t._v("#")]),t._v(" 二、为什么会有IOC")]),t._v(" "),a("p",[t._v("一句话解释：为了方便管理依赖咯~")]),t._v(" "),a("p",[t._v("你可能要继续疑惑了，怎么就方便了？当然，如果大哥你也理解了，那咱们跳第三节怎么样。")]),t._v(" "),a("h3",{attrs:{id:"_1-没有ioc时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-没有ioc时"}},[t._v("#")]),t._v(" （1）没有IoC时")]),t._v(" "),a("h3",{attrs:{id:"_2-有ioc之后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-有ioc之后"}},[t._v("#")]),t._v(" （2）有IoC之后")]),t._v(" "),a("h2",{attrs:{id:"三、开始实践了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、开始实践了"}},[t._v("#")]),t._v(" 三、开始实践了")]),t._v(" "),a("p",[t._v("好滴，相信大哥们多多少少都了解了关于IoC的一些概念，那咱们开始制作装依赖的容器吧！")]),t._v(" "),a("h3",{attrs:{id:"_1-初阶简易版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-初阶简易版本"}},[t._v("#")]),t._v(" （1）初阶简易版本")]),t._v(" "),a("p",[t._v("一般会用很多种容器，来装不一样的依赖。")]),t._v(" "),a("p",[t._v("比如你家里的大衣柜，你不可能把所有衣物，一啪啦的全扔进去吧。（也太......像我了吧？？？）\n人类自古就有分而治之的思想，可能会把它分成很多个装衣服的容器：有装衬衫的、装领带的、装西装、装裤子...")]),t._v(" "),a("p",[t._v("既然你也同意这个观点了，那我们先来实现一个用来装内部服务对象的容器，其余的类似")]),t._v(" "),a("h3",{attrs:{id:"_2-完整简易版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-完整简易版本"}},[t._v("#")]),t._v(" （2）完整简易版本")]),t._v(" "),a("h3",{attrs:{id:"_3-拓展ioc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-拓展ioc"}},[t._v("#")]),t._v(" （3）拓展IOC")])])}),[],!1,null,null,null);a.default=r.exports}}]);