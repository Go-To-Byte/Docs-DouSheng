(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{418:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"grpc官方的error处理-我放在http中1样的好用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grpc官方的error处理-我放在http中1样的好用"}},[t._v("#")]),t._v(" GRPC官方的error处理，我放在HTTP中1样的好用")]),t._v(" "),s("p",[s("code",[t._v("Go")]),t._v("的error机制，可能被吐槽得算多的了。这里就不吐槽了。既然要来做统一的error处理。")]),t._v(" "),s("p",[t._v("既然要来做统一的"),s("code",[t._v("error")]),t._v("处理。在这之前，你总的告诉我，为什么需要做异常处理吧！不可能说因为某某说："),s("s",[s("em",[t._v("一个后端项目中，不能缺少异常处理哟，没有的话，可...")])])]),t._v(" "),s("p",[t._v("这样可不行，咱们还是来看看，为什么需要统一error处理。")]),t._v(" "),s("h2",{attrs:{id:"一、为什么需要统一error处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、为什么需要统一error处理"}},[t._v("#")]),t._v(" 一、为什么需要统一error处理？")]),t._v(" "),s("p",[t._v("既然我们主要是处理"),s("code",[t._v("HTTP Handler的error")]),t._v("，那先来看看，我认为的，优雅的Handler层的代码长什么样。")]),t._v(" "),s("h3",{attrs:{id:"_1-我认为的优雅的handler层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-我认为的优雅的handler层"}},[t._v("#")]),t._v(" （1）我认为的优雅的Handler层")]),t._v(" "),s("h4",{attrs:{id:"_1、是这样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、是这样的"}},[t._v("#")]),t._v(" 1、是这样的")]),t._v(" "),s("p",[t._v("先说结论，我认为，Handler层核心应该只做三件事：")]),t._v(" "),s("ol",[s("li",[t._v("处理什么uri")]),t._v(" "),s("li",[t._v("接收请求参数&提取额外参数，去调用业务方法，执行具体的业务逻辑。")]),t._v(" "),s("li",[t._v("拿到上一步调用返回的结果，进行响应。")])]),t._v(" "),s("p",[t._v("为什么呢？我的理由如下，听我细细道来。")]),t._v(" "),s("p",[t._v("与其说是处理HTTP的Handler，还不如说是处理HTTP的报文"),s("code",[t._v("（HTTP Message）")]),t._v("。简单来了解一下"),s("a",{attrs:{href:"https://juejin.cn/post/7117192792446599199",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP的报文格式"),s("OutboundLink")],1),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86dce1f72aae4ec2861cc3b8396d1f80~tplv-k3u1fbpfcp-zoom-1.image",alt:"image-20230224151222317"}})]),t._v(" "),s("p",[t._v("看了图，有点懵没关系，我就想说：HTTP 报文格式，核心就是这三部分"),s("code",[t._v("（start-line、header、body）")])]),t._v(" "),s("p",[t._v("既然报文长这样，那么HTTP的Handler，核心至少也得处理这三部分吧，用一幅图片简单对应一下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c2ea8844f312440f934eb9113fc8c15e~tplv-k3u1fbpfcp-zoom-1.image",alt:"image-20230224152826933"}})]),t._v(" "),s("p",[t._v("好了，我的理由叙述完了，再来分别看看我给的结论：")]),t._v(" "),s("h4",{attrs:{id:"_2、处理什么uri"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、处理什么uri"}},[t._v("#")]),t._v(" 2、处理什么URI")]),t._v(" "),s("p",[t._v("这个是在定义HandlerFunc的时候，就需要定义的，此方法到底负责哪个请求？负责什么URI？比如我们项目使用的是Gin封装的"),s("code",[t._v("HTTP Servce")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Registry 用于注册Handler所需要暴露的路由")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Registry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IRoutes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/register/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Register"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetUserInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如上代码所示，在添加路由的时候，不就是在处理这个函数处理什么URI吗？")]),t._v(" "),s("h4",{attrs:{id:"_3、接收请求参数-提取额外参数-去调用业务方法-执行具体的业务逻辑。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、接收请求参数-提取额外参数-去调用业务方法-执行具体的业务逻辑。"}},[t._v("#")]),t._v(" 3、接收请求参数&提取额外参数，去调用业务方法，执行具体的业务逻辑。")]),t._v(" "),s("p",[t._v("比如拿登录这个简单的业务来举例，用户要登陆，至少要提供用户名和密码这两个参数吧。那这两个参数放在哪里呢？：是请求头？请求体？还是query string中呢？")]),t._v(" "),s("p",[t._v("反正不管是哪里，你总的把他从HTTP的报文中解析出来，这不就是在处理Header和Body吗？")]),t._v(" "),s("p",[t._v("拿到了这些参数过后，就可以去调用你的业务方法了。")]),t._v(" "),s("p",[t._v("ps：当然啊，我也见过有一些代码，在Handler里进行了大量的业务逻辑的处理，甚至还有的直接在这里去操纵数据库。不是说不行啊，但的确不太推荐~")]),t._v(" "),s("h4",{attrs:{id:"_4、拿到上一步调用返回的结果-进行响应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、拿到上一步调用返回的结果-进行响应"}},[t._v("#")]),t._v(" 4、拿到上一步调用返回的结果，进行响应")]),t._v(" "),s("p",[t._v("经过前两个步骤后，不管调用业务逻辑成功与否，它都会它返回一些数据。那么，我们就需要用这些数据，作为对应的响应。")]),t._v(" "),s("p",[t._v("而响应也是一则HTTP报文，那它也需要组装HTTP中的三个核心："),s("code",[t._v("（start-line、header、body）")])]),t._v(" "),s("p",[t._v("大致就是：进行响应的状态码是什么啊。需不需要添加数据到响应的Header啊。有没有Body数据要返回啊...")]),t._v(" "),s("h3",{attrs:{id:"_2-那现在优雅了吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-那现在优雅了吗"}},[t._v("#")]),t._v(" （2）那现在优雅了吗？")]),t._v(" "),s("p",[t._v("好了，介绍完了我认为比较优雅的HTTP Handler代码，我们还是以"),s("code",[t._v("Login的HandlerFunc")]),t._v("为例：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\treq "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewLoginAndRegisterRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、接收参数")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tmsg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、若失败、响应错误结果")]),t._v("\n\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusBadRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TokenResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tStatusCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tStatusMsg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、进行接口调用")]),t._v("\n\tresp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tmsg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、若失败、响应错误结果")]),t._v("\n\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusBadRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TokenResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tStatusCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tStatusMsg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tresp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、响应正确结果")]),t._v("\n\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusBadRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面的代码，看大致逻辑就好。你觉得优雅了吗？好像满足了我所说的"),s("code",[t._v("HTTP的Handler")]),t._v("只做三件事哎：")]),t._v(" "),s("ol",[s("li",[t._v("处理什么uri")]),t._v(" "),s("li",[t._v("接收请求参数&提取额外参数，去调用业务方法，执行具体的业务逻辑。")]),t._v(" "),s("li",[t._v("拿到上一步调用返回的结果，进行响应。")])]),t._v(" "),s("p",[t._v("emm，相比于大多数在控制层写了大量业务逻辑的代码，大体上的确还算比较优雅了。但你有没有发现，其中有好几个地方，如果"),s("code",[t._v("err != nil")]),t._v("，我们都需要进行形如这样的响应：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tmsg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、若失败、响应错误结果")]),t._v("\n\t\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusBadRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TokenResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tStatusCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tStatusMsg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("谁想有事没事就碰到error啊，我们想要的流程明明是："),s("strong",[t._v("接收用户请求 -> 处理业务逻辑 -> 返回成功响应")])]),t._v(" "),s("p",[t._v("可偏偏半路杀出来一个"),s("code",[t._v("error")]),t._v("很嘲讽的说：你在调用我的时候出错了，你自己想想怎么处理我吧。要不然我可不让你好过！！！")]),t._v(" "),s("p",[t._v("于是就出现了上面的代码。那我们有没有办法，让他稍微优雅一些呢？")]),t._v(" "),s("p",[t._v("答案是有的，这就引出了我们今天的究极主题："),s("strong",[t._v("统一的"),s("code",[t._v("error")]),t._v("处理")])]),t._v(" "),s("h2",{attrs:{id:"二、我们是这样做的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、我们是这样做的"}},[t._v("#")]),t._v(" 二、我们是这样做的")]),t._v(" "),s("h3",{attrs:{id:"_1-处理前准备一些东西"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-处理前准备一些东西"}},[t._v("#")]),t._v(" （1）处理前准备一些东西")]),t._v(" "),s("h4",{attrs:{id:"_1、响应信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、响应信息"}},[t._v("#")]),t._v(" 1、响应信息")]),t._v(" "),s("p",[t._v("一般与外界交互响应信息中，都会有响应码和提示消息。并且我们还可以预定义一些一一对应的code和msg。")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("定义结构体")])])]),t._v(" "),s("p",[t._v("为了方便封装，我们也采用面向对象的方式来做了，定义如下的结构体。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" CodeMsg "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 状态码")]),t._v("\n   StatusCode "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"status_code"`')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 消息")]),t._v("\n   StatusMsg "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"status_msg"`')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("此响应提示，就包含了 code 和 msg，为了方便使用，我们来给一些初始化的构造方法吧")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("好用的构造方法")])])]),t._v(" "),s("p",[t._v("都是些简单的构造方法，就不一一贴出来了，感兴趣的可以看看项目源码鸭~")]),t._v(" "),s("p",[t._v("但是为了之后使用方便，这两个方法还是值得一提。我们刚提到，可以预定义一些的CodeMsg。就像使用Java的枚举类一样。")]),t._v(" "),s("p",[t._v("而这两个方法，就是用来配合预定义的枚举使用的。这两个方法可以双向解析 "),s("code",[t._v("code <——> msg")]),t._v("。从而使用预定义的值。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NewWithMsg 根据msg初始化。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注：如果传入的msg不是预定义的msg，那么code：1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewWithMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("CodeMsg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Msg2Code")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NewWithCode 根据StatusCode初始化。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 注：如果传入的StatusCode不是预定义的code，那么msg：fmt.Sprintf("未知错误，code = %d", code)')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewWithCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("CodeMsg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewWithMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Code2Msg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("ps：顺带提一嘴，"),s("code",[t._v("Go语言")]),t._v("不能写重载方法，有时候真的好难想名字啊。😒😒")]),t._v(" "),s("h4",{attrs:{id:"_2、预定义枚举"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、预定义枚举"}},[t._v("#")]),t._v(" 2、预定义枚举")]),t._v(" "),s("p",[t._v("本来一开始是直接使用对象来写的枚举，但是后面发现。这些预定义的枚举值，都是一一对应的，用Map做可能会更好。当然，这里借鉴了GRPC的异常处理。往后看看你就知道了。")]),t._v(" "),s("p",[t._v("所以做了形如下面的枚举值。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 约束枚举值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StatusCode "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tOPERATE_OK StatusCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    \n\tERROR_OPERATE        StatusCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40001")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" msgToCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("StatusCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"操作成功"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OPERATE_OK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"操作失败"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      ERROR_OPERATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3、异常对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、异常对象"}},[t._v("#")]),t._v(" 3、异常对象")]),t._v(" "),s("p",[t._v("如果出现错误，一般会进行错误的响应，也需要用到上面的枚举，来看看如何定义异常对象的吧。")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("定义一个异常对象")])])]),t._v(" "),s("p",[t._v("主要就是提供CodeMsg，当然，这里模仿"),s("code",[t._v("GRPC")]),t._v("的方式，可以让在抛err的时候，携带一些额外的信息"),s("code",[t._v("Details")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Exception "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   S "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("CodeMsg\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可携带额外消息")]),t._v("\n   Details "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"details"`')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("给他构造方法")])]),t._v(" "),s("p",[t._v("核心就是根据异常对象，去构建出"),s("code",[t._v("CodeMsg")]),t._v("对象，就不一一贴出来了，感兴趣可以看看哟")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传递预定义的枚举 Msg")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithStatusMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exception "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithCodeMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewWithMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传递预定义的枚举 Code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithStatusCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exception "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithStatusMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Code2Msg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("给他一些好用的方法")])])]),t._v(" "),s("p",[t._v("既然想要作为异常对象，核心只需要实现error接口即可，那它都有什么方法呢？")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标准库的 error 接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("跟进去看看，呀！只有一个方法，那也太好实现了啊！！！那就好办咯~")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error 实现 error 接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("至此，我们已经定义好用于自定义error的一些结构体了。可是我们还不知道如何使用这些方法，去处理异常勒。")]),t._v(" "),s("p",[t._v("我们先来看如何统一处理 HTTP Handler 中出现的异常。")]),t._v(" "),s("h3",{attrs:{id:"_2-http-出现异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-出现异常"}},[t._v("#")]),t._v(" （2）HTTP 出现异常")]),t._v(" "),s("h4",{attrs:{id:"_1、如何处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、如何处理"}},[t._v("#")]),t._v(" 1、如何处理")]),t._v(" "),s("p",[t._v("因为是用"),s("code",[t._v("Gin封装的HTTP Serveice")]),t._v("，所以，我这里仅以处理Gin的Handler出现的异常为例，其余的处理思路类似：")]),t._v(" "),s("p",[t._v("如果按网上所说xx设计模式来说的话，这里的核心思想就是用到了："),s("strong",[t._v("装饰器模式")])]),t._v(" "),s("p",[t._v("什么是装饰器模式？不知道没关系，不用管那些高大上的名字，只要知道核心思想，我怎么用不都行，是吧~")]),t._v(" "),s("p",[t._v("而装饰器的核心思想，还是我自己理解的啊："),s("strong",[t._v("搞清楚把什么装饰成什么")])]),t._v(" "),s("p",[t._v("而我们这里，要处理HTTTP的异常，那肯定是用来装饰和"),s("code",[t._v("HTTP的Handler")]),t._v("相关的东西咯。那先看看"),s("code",[t._v("Gin框架封装的HTTP Handler")]),t._v("长什么样：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HandlerFunc defines the handler used by gin middleware as return value.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" HandlerFunc "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("知道它的HandlerFunc 长这样后，那咱们至少可以得出一个信息：经过装饰后，长成这个样子。")]),t._v(" "),s("p",[t._v("加上Gin的包名，也就是：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/73428cabe28246f8bf75ba564da5ab3c~tplv-k3u1fbpfcp-zoom-1.image",alt:"image-20230226165219439"}})]),t._v(" "),s("p",[t._v("看完了图，如果我们再知道要装饰啥，是不是就可以写代码了。是的，继续跟上我的思路。")]),t._v(" "),s("p",[t._v("如果你再倒回去看上面我们觉得还不够优雅的的代码，你肯定又能想起那个 "),s("code",[t._v("err != nil")]),t._v("，那个狰狞的 error 。所以，我们能不能把那个，伤我很深，却又惹不起的"),s("code",[t._v("err != nil")]),t._v("的情形，放入装饰器处理呢？按这样的想法，再来画一幅图看看：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0acb1582b4ff47ca96a9c3a976eb1644~tplv-k3u1fbpfcp-zoom-1.image",alt:"image-20230226170026645"}})]),t._v(" "),s("p",[t._v("看完了图，知道了大致思路。那我们就来写代码咯~")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方便下文使用，自定义一个函数类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" AppHandler "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GinErrWrapper 用于统一处理控制层 error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GinErrWrapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler AppHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" zap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Named")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GinErrWrapper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、调用 Handler 方法的逻辑")]),t._v("\n      err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("recover")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Infof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Panic: %v"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusInternalServerError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INTERNAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Errorf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"拦截到异常：%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、来到这里。err 肯定是有值的咯")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusBadRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CodeMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 还可进行其他 Case 因为我给grpc调用的err用方法GrpcErrWrapper包装了")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以从 控制层的error，基本上都是 custom.Exception")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusInternalServerError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INTERNAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("看完了代码，其实也没多难是吧。可以看到：")]),t._v(" "),s("ol",[s("li",[t._v("装饰器的入参和出参，是不是就是再搞清楚，要"),s("strong",[t._v("把谁装饰成谁")]),t._v("？")]),t._v(" "),s("li",[t._v("刚进入装饰器，我们就去调用了"),s("strong",[t._v("真正的Handler逻辑")]),t._v("，会返回一个 err 值。如果没有，那就说明正常咯，那就不需要装饰了嘛。")]),t._v(" "),s("li",[t._v("能到后面装饰 error 的逻辑，那说明"),s("strong",[t._v("肯定有error了")]),t._v("。那我们就可以判断，具体"),s("strong",[t._v("是哪一种 err")]),t._v("，是自定义的吗？如果是，那就可以取出自定义异常的消息了咯。不是呢？又该怎么办呢？")])]),t._v(" "),s("p",[t._v("这下，算是了解思路了吧，来看看处理后，我们是如何使用的。")]),t._v(" "),s("h4",{attrs:{id:"_2、处理后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、处理后"}},[t._v("#")]),t._v(" 2、处理后")]),t._v(" "),s("p",[t._v("来看看，现在我们的"),s("code",[t._v("HTTP Handler")]),t._v("中，是怎样的，还是拿登录来举例：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Login 需要经过装饰：r.POST("/login/", exception.GinErrWrapper(h.Login))')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\treq "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewLoginAndRegisterRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、接收参数")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithStatusCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ERROR_ARGS_VALIDATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、进行接口调用")]),t._v("\n\tresp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GrpcErrWrapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、没有err，正常响应")]),t._v("\n\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tloginAndRegisterResp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tCodeMsg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewWithCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OPERATE_OK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tTokenResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("和之前的代码比起来，是不是就少了很多 err 处理了？不信你往上看看。")]),t._v(" "),s("p",[t._v("至于我们的返回的err值，不就用上了我们自定义的异常对象了吗？当然，你不使用，也是没问题的。甚至你还可以再继续定义其他的异常对象。你只需要在装饰器中，继续"),s("strong",[t._v("添加 case")]),t._v(" 即可")]),t._v(" "),s("p",[t._v("至此，应该了解了我们异常处理的思路。我们趁热打铁，把进行"),s("strong",[t._v("GRPC调用的异常")]),t._v("也处理一下。")]),t._v(" "),s("h3",{attrs:{id:"_3-grpc出现异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-grpc出现异常"}},[t._v("#")]),t._v(" （3）GRPC出现异常")]),t._v(" "),s("h4",{attrs:{id:"_1、如何处理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、如何处理-2"}},[t._v("#")]),t._v(" 1、如何处理")]),t._v(" "),s("p",[t._v("这里也是使用装饰器的方式来做的。从上面的使用你应该已经发现了。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GrpcErrWrapper 用于包装 GPRC 调用产生的 err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GrpcErrWrapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exception "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、通过此方法，一定能够将err转换为 grpc 调用产生的异常")]),t._v("\n   s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Convert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n   log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" zap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Named")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GrpcErrWrapper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Errorf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"拦截到异常：%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在通过包装成 自定义异常，统一在 gin 中进行拦截处理")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithStatusMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("看方法实现，我这里也是给它"),s("strong",[t._v("转换为了自定义的异常")]),t._v("。然后进入上面HTTP的处理err的装饰器中，统一处理。代码简单，看思路即可~")]),t._v(" "),s("p",[t._v("但是看完了代码，你可能有点疑惑，进行GRPC调用业务方法。如果在编写业务方法时，就以自定义异常"),s("code",[t._v("（code + msg）")]),t._v("返回了，那就会返回自定义error鸭，就算error真的 不是 nil，它的值不也会在我们的Handler中吗？不是已经统一处理了吗？为什么还需要我们自己处理一遍呢？")]),t._v(" "),s("p",[t._v("哈哈哈，来碰个杯，我再继续说~🍻。你这简直和我当时的想法一模一样啊。那我为什么还要装饰一遍呢？这就得提到使用GRPC框架进行rpc调用时，它的统一异常处理了。")]),t._v(" "),s("h4",{attrs:{id:"_2、grpc框架异常处理的大致思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、grpc框架异常处理的大致思路"}},[t._v("#")]),t._v(" 2、GRPC框架异常处理的大致思路")]),t._v(" "),s("p",[t._v("我这里只是说异常处理的大致思路，并不是说GRPC的原理的哈"),s("code",[t._v("（当然，这不主要是因为老弟也不是很了解吗~）")]),t._v("。")]),t._v(" "),s("p",[t._v("那从哪里开始呢？就从它处理一系列逻辑后，返回的 err 说起吧。在进行了一系列的处理后，不管成功与否吧，终于要开始返回err了。")]),t._v(" "),s("ol",[s("li",[t._v("返回的err，会经过此方法进行"),s("strong",[t._v("包装")]),t._v("：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/87b66e32be4c45b5be905863302dc782~tplv-k3u1fbpfcp-zoom-1.image",alt:"image-20230226175216552"}})]),t._v(" "),s("p",[t._v("看这个方法的思路，是不是感觉有那么一丝丝熟悉的感觉？哈哈哈，是的，我们那里装饰器的思路，就是借鉴了这里的实现。")]),t._v(" "),s("p",[t._v("在经过一系列处理后，返回的err，它都会把他转换成 "),s("code",[t._v("status.Error")]),t._v("，也就是说。不管你当时编写业务逻辑的时候，你返回的是什么error。它都会把他变成"),s("code",[t._v("status.Error")]),t._v(" ，当然，如果你了解到这一点，你可能编写业务逻辑的时候，如果有 err，你就会返回"),s("code",[t._v("status.Error")]),t._v("的错误。")]),t._v(" "),s("p",[t._v("就比如当你用"),s("code",[t._v("protoc-gen-go-grpc")]),t._v("工具根据"),s("code",[t._v("protobuf")]),t._v("定义生成代码的时候。它会有一个默认的"),s("code",[t._v("UnimplementedServiceServer")]),t._v("对象。")]),t._v(" "),s("p",[t._v("这个对象会默认实现你定义的所有接口，你看看它的 err 返回值，这不就是"),s("code",[t._v("status.Error")]),t._v("吗？")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnimplementedServiceServer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("LoginAndRegisterRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("TokenResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Errorf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("codes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Unimplemented"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method Login not implemented"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("哈哈哈，所以，你看看，如果你在实现GRPC方法的时候，不是按这样的格式返回 err 的，是不是还要麻烦别人给我们处理一遍呢？")]),t._v(" "),s("p",[t._v("当然，它并不是完全替换掉你的 err 信息，他会根据你的 err 信息，来构建一个 "),s("code",[t._v("status.Error")]),t._v("，所以，如果在处理业务逻辑的时候，定义一些信息，会被它中间处理一下。可能会丢失部分信息，比如说，原本定义的状态码。")]),t._v(" "),s("p",[t._v("所以，我们这里在进行GRPC调用的时候，会将返回 err 的异常，用我们自定义的枚举的消息提示，那么之后我们就能够用哪个消息提示，去找出对应的状态码。进而给出正确的提示。")]),t._v(" "),s("p",[t._v("当然啊，也可以将此消息放入status.Error的额外信息中。说到这，你发现我一直提到的 "),s("code",[t._v("status.Error")]),t._v("，这玩意到底是啥嘛！")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("status包下面的有什么？")])]),t._v(" "),s("p",[t._v("如果你点进它的 status 包中，你会看到好些方法。比如：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c0291a7f97d34a2a9f3d42bd61e33aeb~tplv-k3u1fbpfcp-zoom-1.image",alt:"image-20230226180931049"}})]),t._v(" "),s("p",[t._v("你看看啊，他这些方法，是不是也很眼熟呢？你往上看看，我们定义的结构体，是不是提供了和他很类似的方法？")]),t._v(" "),s("p",[t._v("只不过他这里引入的是"),s("code",[t._v("Status")]),t._v("对象，是什么呢？可以看到，是它"),s("code",[t._v("internal")]),t._v("内部包中的Status对象。如果你再跟进一步：除了看到那些好用的方法外，最主要有两个结构体：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Status represents an RPC status code, message, and details.  It is immutable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and should be created with New, Newf, or FromProto.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Status "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("spb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Status\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error wraps a pointer of a status proto. It implements error and Status,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and a nil *Error should never be returned by this package.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Error "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Status\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("你发现，这里的 Status 对象，还依赖了一个 "),s("code",[t._v("*spb.Status")]),t._v("对象，如果再跟入，你会发现：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4469c96553e24cb8b4fb1cda1b44fa25~tplv-k3u1fbpfcp-zoom-1.image",alt:"image-20230226181700271"}})]),t._v(" "),s("p",[t._v("这是官方"),s("code",[t._v("Protobuf")]),t._v("生成的代码，看到了什么？是不是也很眼熟？"),s("code",[t._v("Code和Massage")]),t._v("。")]),t._v(" "),s("p",[t._v("好了，大致跟你介绍完了这好几个对象。来与我们自定义的异常对象一起看看，总结一下。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("总结一下")])]),t._v(" "),s("ul",[s("li",[t._v("我们的"),s("strong",[t._v("CodeMsg")]),t._v("对象，和GRPC框架的Status对象很类似，里面主要有"),s("code",[t._v("Code+Msg")]),t._v("。")]),t._v(" "),s("li",[t._v("我们的"),s("strong",[t._v("Exception")]),t._v("对象，和这里的"),s("code",[t._v("Error")]),t._v("对象很类似，都是去实现了"),s("code",[t._v("error")]),t._v("接口。")]),t._v(" "),s("li",[t._v("我们的"),s("strong",[t._v("StatusCode")]),t._v("枚举，和这里面有一个"),s("code",[t._v("Code")]),t._v("枚举很类似，都是使用 Map 来定义的。")]),t._v(" "),s("li",[t._v("我们"),s("strong",[t._v("统一异常处理的装饰器")]),t._v("思路，和这里面的 "),s("code",[t._v("toRPCErr")]),t._v("很类似。")])]),t._v(" "),s("p",[s("strong",[t._v("所以，至此，我就能说，GRPC官方的error处理，我放在HTTP的Handler中，一样的好用了吧~")])]),t._v(" "),s("h3",{attrs:{id:"_4-还是很麻烦的地方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-还是很麻烦的地方"}},[t._v("#")]),t._v(" （4）还是很麻烦的地方")]),t._v(" "),s("p",[t._v("回到文章的开头，为什么说go的error被很多人吐槽，我自己认为的，最核心的点就是：")]),t._v(" "),s("p",[s("strong",[t._v("error 是就是一个 value")]),t._v("，除非你使用 "),s("code",[t._v("panic(err)")]),t._v("，可能会打印一些堆栈信息以外，几乎很难看到堆栈信息。和很多其他的语言相比起来，也就很难定位到问题的根本原因。会增加程序员的调试成本、时间成本。")]),t._v(" "),s("p",[t._v("当然啊，也有很多好的地方，和其他地方被众多coder讨论的。这里只是说说我的个人看法，不喜勿喷哟😁~")]),t._v(" "),s("p",[t._v("所以我认为，这样的异常处理，只是在很大程度上让代码优雅了许多，根本的原因还是需要自己花时间定位。后期可能会想办法加上能够将堆栈信息暴露出来的库。携带上一些根因。尽量减少出现问题的调试成本~")]),t._v(" "),s("p",[t._v("欢迎大家讨论鸭~")])])}),[],!1,null,null,null);s.default=r.exports}}]);